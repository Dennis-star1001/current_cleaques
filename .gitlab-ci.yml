# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

variables:
  
  SSH_PRIVATE_KEY: "$ncleaques"
  SSH_HOST: "$HOST"          # Replace with your VPC server's IP address or hostname       # SSH port (default is 22)
  SSH_USER: "ubuntu"       # SSH username on the VPC server
  TARGET_DIRECTORY: "$main_dir"  # The directory where you want to transfer files


deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  #before_script:
    #mkdir -p ~/.ssh
    ##- echo "$SSH_PRIVATE_KEY" > ~/.ssh/gitlab_rsa  
    #- chmod 600 ~/.ssh/gitlab_rsa   
    #- ssh-keyscan -H $SSH_HOST > ~/.ssh/known_hosts
  script:
    
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/gitlab_rsa  
    - chmod 600 ~/.ssh/gitlab_rsa   
    - ssh-keyscan -H $SSH_HOST > ~/.ssh/known_hosts
    - ssh -i $SSH_PRIVATE_KEy $SSH_USER@$SSH_HOST "cd $TARGET_DIRECTORY && git checkout main && git pull && exit"   
    #- scp -i ~/.ssh/gitlab_rsa -r main $SSH_USER@$SSH_HOST:$TARGET_DIRECTORY                                             
    #- ssh $SSH_USER@$SSH_HOST "cd $TARGET_DIRECTORY && git checkout main && git pull && exit"                                                